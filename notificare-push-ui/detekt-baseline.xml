<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>ComplexCondition:NotificareWebPassFragment.kt$NotificareWebPassFragment$content?.type != NotificareNotification.Content.TYPE_PK_PASS || passUrlStr == null || application == null || host == null</ID>
    <ID>ComplexCondition:NotificationContainerFragment.kt$NotificationContainerFragment$action == null &amp;&amp; notification.type != NotificareNotification.TYPE_ALERT &amp;&amp; notification.type != NotificareNotification.TYPE_PASSBOOK &amp;&amp; notification.actions.isNotEmpty()</ID>
    <ID>CyclomaticComplexMethod:NotificarePushUIImpl.kt$NotificarePushUIImpl$internal fun getFragmentCanonicalClassName(notification: NotificareNotification): String?</ID>
    <ID>CyclomaticComplexMethod:NotificationContainerFragment.kt$NotificationContainerFragment$private fun handleAction(action: NotificareNotification.Action)</ID>
    <ID>CyclomaticComplexMethod:NotificationWebViewClient.kt$NotificationWebViewClient$private fun handleUri(@Suppress("UNUSED_PARAMETER") view: WebView, uri: Uri?): Boolean</ID>
    <ID>MaxLineLength:NotificareCallbackActionFragment.kt$NotificareCallbackActionFragment$NotificarePendingResult.CAPTURE_IMAGE_AND_KEYBOARD_REQUEST_CODE -&gt; R.layout.notificare_action_callback_camera_keyboard</ID>
    <ID>MaxLineLength:NotificareOptions.kt$"Invalid color resource provided for 're.notifica.push.ui.custom_tabs_navigation_bar_divider_color'."</ID>
    <ID>MaxLineLength:NotificarePushUI.kt$NotificarePushUI.NotificationLifecycleListener$"Action failed to execute, please override onActionFailedToExecute if you want to receive these events."</ID>
    <ID>MaxLineLength:NotificarePushUI.kt$NotificarePushUI.NotificationLifecycleListener$"Notification failed to present, please override onNotificationFailedToPresent if you want to receive these events."</ID>
    <ID>MaxLineLength:NotificarePushUI.kt$NotificarePushUI.NotificationLifecycleListener$"Notification finished presenting, please override onNotificationFinishedPresenting if you want to receive these events."</ID>
    <ID>MaxLineLength:NotificarePushUI.kt$NotificarePushUI.NotificationLifecycleListener$"Notification url clicked, please override onNotificationUrlClicked if you want to receive these events."</ID>
    <ID>MaxLineLength:NotificarePushUI.kt$NotificarePushUI.NotificationLifecycleListener$"Notification will present, please override onNotificationWillPresent if you want to receive these events."</ID>
    <ID>MaxLineLength:NotificarePushUI.kt$NotificarePushUI.NotificationLifecycleListener$// NotificareLogger.debug("Action did not execute, please override onActionNotExecuted if you want to receive these events.")</ID>
    <ID>MaxLineLength:NotificarePushUIImpl.kt$NotificarePushUIImpl$"Attempting to create a fragment for a notification of type 'InAppBrowser'. This type contains no visual interface."</ID>
    <ID>MaxLineLength:NotificarePushUIImpl.kt$NotificarePushUIImpl$"Attempting to create a fragment for a notification of type 'UrlScheme'. This type contains no visual interface."</ID>
    <ID>MaxLineLength:NotificarePushUIImpl.kt$NotificarePushUIImpl$"Attempting to create a fragment for a notification of type 'none'. This type contains to visual interface."</ID>
    <ID>MaxLineLength:NotificarePushUIImpl.kt$NotificarePushUIImpl$"Attempting to present a notification of type 'none'. These should be handled by the application instead."</ID>
    <ID>MaxLineLength:NotificarePushUIImpl.kt$NotificarePushUIImpl$"No push-ui dependencies have been detected. Please include one of the platform-specific push-ui packages."</ID>
    <ID>MaxLineLength:NotificarePushUIImpl.kt$NotificarePushUIImpl$override val lifecycleListeners: List&lt;WeakReference&lt;NotificarePushUI.NotificationLifecycleListener&gt;&gt; = _lifecycleListeners</ID>
    <ID>MaxLineLength:NotificationCallbackAction.kt$NotificationCallbackAction$?:</ID>
    <ID>MaxLineLength:NotificationContainerFragment.kt$NotificationContainerFragment$// if (notification.getType().equals(NotificareNotification.TYPE_ALERT) || notification.getType().equals(NotificareNotification.TYPE_PASSBOOK)) {</ID>
    <ID>MaxLineLength:NotificationWebViewClient.kt$NotificationWebViewClient$// Normal HTTP links will be handled by the webView itself, unless they match any of the app's intent filters</ID>
    <ID>SwallowedException:NotificareCallbackActionFragment.kt$NotificareCallbackActionFragment$e: ClassCastException</ID>
    <ID>SwallowedException:NotificarePushUIImpl.kt$NotificarePushUIImpl$e: Exception</ID>
    <ID>SwallowedException:NotificationActionsDialog.kt$NotificationActionsDialog$e: Exception</ID>
    <ID>SwallowedException:NotificationContainerFragment.kt$NotificationContainerFragment$e: ClassCastException</ID>
    <ID>SwallowedException:NotificationDialog.kt$NotificationDialog$e: Exception</ID>
    <ID>SwallowedException:NotificationFragment.kt$NotificationFragment$e: ClassCastException</ID>
    <ID>SwallowedException:NotificationMailAction.kt$NotificationMailAction$e: ActivityNotFoundException</ID>
    <ID>SwallowedException:NotificationSmsAction.kt$NotificationSmsAction$e: ActivityNotFoundException</ID>
    <ID>SwallowedException:NotificationTelephoneAction.kt$NotificationTelephoneAction$e: ActivityNotFoundException</ID>
    <ID>UnusedPrivateProperty:NotificationContainerFragment.kt$NotificationContainerFragment.Companion$private const val CAMERA_REQUEST_CODE = 1</ID>
  </CurrentIssues>
</SmellBaseline>
